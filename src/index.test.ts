import { expect, test } from 'vitest'

import * as actions from './index'

test('exports actions', () => {
  expect(actions).toMatchInlineSnapshot(`
    {
      "AbiConstructorNotFoundError": [Function],
      "AbiConstructorParamsNotFoundError": [Function],
      "AbiDecodingDataSizeInvalidError": [Function],
      "AbiDecodingZeroDataError": [Function],
      "AbiEncodingArrayLengthMismatchError": [Function],
      "AbiEncodingLengthMismatchError": [Function],
      "AbiErrorInputsNotFoundError": [Function],
      "AbiErrorNotFoundError": [Function],
      "AbiErrorSignatureNotFoundError": [Function],
      "AbiEventNotFoundError": [Function],
      "AbiEventSignatureNotFoundError": [Function],
      "AbiFunctionNotFoundError": [Function],
      "AbiFunctionOutputsNotFoundError": [Function],
      "AbiFunctionSignatureNotFoundError": [Function],
      "BaseError": [Function],
      "BlockNotFoundError": [Function],
      "CallExecutionError": [Function],
      "ChainDoesNotSupportContract": [Function],
      "ContractFunctionExecutionError": [Function],
      "ContractFunctionRevertedError": [Function],
      "ContractFunctionZeroDataError": [Function],
      "DataLengthTooLongError": [Function],
      "DataLengthTooShortError": [Function],
      "EstimateGasExecutionError": [Function],
      "ExecutionRevertedError": [Function],
      "FeeCapTooHighError": [Function],
      "FeeCapTooLowError": [Function],
      "FilterTypeNotSupportedError": [Function],
      "HttpRequestError": [Function],
      "InsufficientFundsError": [Function],
      "InternalRpcError": [Function],
      "IntrinsicGasTooHighError": [Function],
      "IntrinsicGasTooLowError": [Function],
      "InvalidAbiDecodingTypeError": [Function],
      "InvalidAbiEncodingTypeError": [Function],
      "InvalidAddressError": [Function],
      "InvalidArrayError": [Function],
      "InvalidBytesBooleanError": [Function],
      "InvalidDefinitionTypeError": [Function],
      "InvalidHexBooleanError": [Function],
      "InvalidHexValueError": [Function],
      "InvalidInputRpcError": [Function],
      "InvalidParamsRpcError": [Function],
      "InvalidRequestRpcError": [Function],
      "JsonRpcVersionUnsupportedError": [Function],
      "LimitExceededRpcError": [Function],
      "MethodNotFoundRpcError": [Function],
      "MethodNotSupportedRpcError": [Function],
      "NonceMaxValueError": [Function],
      "NonceTooHighError": [Function],
      "NonceTooLowError": [Function],
      "OffsetOutOfBoundsError": [Function],
      "ParseRpcError": [Function],
      "RawContractError": [Function],
      "RequestError": [Function],
      "ResourceNotFoundRpcError": [Function],
      "ResourceUnavailableRpcError": [Function],
      "RpcError": [Function],
      "RpcRequestError": [Function],
      "SizeExceedsPaddingSizeError": [Function],
      "SwitchChainError": [Function],
      "TimeoutError": [Function],
      "TipAboveFeeCapError": [Function],
      "TransactionExecutionError": [Function],
      "TransactionNotFoundError": [Function],
      "TransactionReceiptNotFoundError": [Function],
      "TransactionRejectedRpcError": [Function],
      "TransactionTypeNotSupportedError": [Function],
      "UnknownNodeError": [Function],
      "UnknownRpcError": [Function],
      "UrlRequiredError": [Function],
      "UserRejectedRequestError": [Function],
      "WaitForTransactionReceiptTimeoutError": [Function],
      "WebSocketRequestError": [Function],
      "boolToBytes": [Function],
      "boolToHex": [Function],
      "bytesToBigint": [Function],
      "bytesToBool": [Function],
      "bytesToHex": [Function],
      "bytesToNumber": [Function],
      "bytesToString": [Function],
      "createClient": [Function],
      "createPublicClient": [Function],
      "createTestClient": [Function],
      "createTransport": [Function],
      "createWalletClient": [Function],
      "custom": [Function],
      "decodeAbiParameters": [Function],
      "decodeErrorResult": [Function],
      "decodeEventLog": [Function],
      "decodeFunctionData": [Function],
      "decodeFunctionResult": [Function],
      "defineBlock": [Function],
      "defineChain": [Function],
      "defineTransaction": [Function],
      "defineTransactionReceipt": [Function],
      "defineTransactionRequest": [Function],
      "encodeAbiParameters": [Function],
      "encodeDeployData": [Function],
      "encodeErrorResult": [Function],
      "encodeEventTopics": [Function],
      "encodeFunctionData": [Function],
      "encodeFunctionResult": [Function],
      "etherUnits": {
        "gwei": 9,
        "wei": 18,
      },
      "fallback": [Function],
      "formatBlock": [Function],
      "formatEther": [Function],
      "formatGwei": [Function],
      "formatTransaction": [Function],
      "formatTransactionRequest": [Function],
      "formatUnit": [Function],
      "fromBytes": [Function],
      "fromHex": [Function],
      "fromRlp": [Function],
      "getAbiItem": [Function],
      "getAccount": [Function],
      "getAddress": [Function],
      "getContractAddress": [Function],
      "getContractError": [Function],
      "getCreate2Address": [Function],
      "getCreateAddress": [Function],
      "getEventSelector": [Function],
      "getFunctionSelector": [Function],
      "gweiUnits": {
        "ether": -9,
        "wei": 9,
      },
      "hexToBigInt": [Function],
      "hexToBool": [Function],
      "hexToBytes": [Function],
      "hexToNumber": [Function],
      "hexToString": [Function],
      "http": [Function],
      "isAddress": [Function],
      "isAddressEqual": [Function],
      "isBytes": [Function],
      "isHex": [Function],
      "keccak256": [Function],
      "labelhash": [Function],
      "multicall3Abi": [
        {
          "inputs": [
            {
              "components": [
                {
                  "name": "target",
                  "type": "address",
                },
                {
                  "name": "allowFailure",
                  "type": "bool",
                },
                {
                  "name": "callData",
                  "type": "bytes",
                },
              ],
              "name": "calls",
              "type": "tuple[]",
            },
          ],
          "name": "aggregate3",
          "outputs": [
            {
              "components": [
                {
                  "name": "success",
                  "type": "bool",
                },
                {
                  "name": "returnData",
                  "type": "bytes",
                },
              ],
              "name": "returnData",
              "type": "tuple[]",
            },
          ],
          "stateMutability": "view",
          "type": "function",
        },
      ],
      "namehash": [Function],
      "numberToBytes": [Function],
      "numberToHex": [Function],
      "pad": [Function],
      "padBytes": [Function],
      "padHex": [Function],
      "parseEther": [Function],
      "parseGwei": [Function],
      "parseUnit": [Function],
      "size": [Function],
      "slice": [Function],
      "sliceBytes": [Function],
      "sliceHex": [Function],
      "stringToBytes": [Function],
      "stringToHex": [Function],
      "stringify": [Function],
      "toBytes": [Function],
      "toHex": [Function],
      "toRlp": [Function],
      "transactionType": {
        "0x0": "legacy",
        "0x1": "eip2930",
        "0x2": "eip1559",
      },
      "trim": [Function],
      "webSocket": [Function],
      "weiUnits": {
        "ether": -18,
        "gwei": -9,
      },
    }
  `)
})
